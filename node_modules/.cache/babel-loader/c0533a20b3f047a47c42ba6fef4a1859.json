{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/otieno/Development/code/phase-2/Phase-2-Code-Challenge-Bot-Battlr/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nconst API = \"http://localhost:8002/bots\";\n\nfunction BotsPage() {\n  _s();\n\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(API).then(res => res.json()) // .then(json => console.log(json))\n    .then(setBots);\n  }, []);\n\n  function enlistBot(bot) {\n    console.log(bot);\n    setBots(bots.map(b => b.id === bot.id ? { ...b,\n      army: true\n    } : b));\n  }\n\n  function removeBot(bot) {\n    console.log(bot);\n    setBots(bots.map(b => b.id === bot.id ? { ...b,\n      army: false\n    } : b));\n  }\n\n  function deleteBot(bot) {\n    // console.log(\"You're fired.\")\n    setBots(bots.filter(b => b.id !== bot.id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: bots.filter(b => b.army),\n      removeBot: removeBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/otieno/Development/code/phase-2/Phase-2-Code-Challenge-Bot-Battlr/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","API","BotsPage","bots","setBots","fetch","then","res","json","enlistBot","bot","console","log","map","b","id","army","removeBot","deleteBot","filter"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,MAAMC,GAAG,GAAG,4BAAZ;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAEA;AAFA,KAGCF,IAHD,CAGMF,OAHN;AAID,GALQ,EAKP,EALO,CAAT;;AAOA,WAASK,SAAT,CAAmBC,GAAnB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,IAAAA,OAAO,CAACD,IAAI,CAACU,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACK,EAAb,GAAkB,EAAC,GAAGD,CAAJ;AAAOE,MAAAA,IAAI,EAAC;AAAZ,KAAlB,GAAsCF,CAApD,CAAD,CAAP;AACD;;AAED,WAASG,SAAT,CAAmBP,GAAnB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,IAAAA,OAAO,CAACD,IAAI,CAACU,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACK,EAAb,GAAkB,EAAC,GAAGD,CAAJ;AAAOE,MAAAA,IAAI,EAAC;AAAZ,KAAlB,GAAuCF,CAArD,CAAD,CAAP;AACD;;AAED,WAASI,SAAT,CAAmBR,GAAnB,EAAuB;AACrB;AACAN,IAAAA,OAAO,CAACD,IAAI,CAACgB,MAAL,CAAYL,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,GAAG,CAACK,EAA9B,CAAD,CAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,WAAD;AACA,MAAA,IAAI,EAAEZ,IAAI,CAACgB,MAAL,CAAYL,CAAC,IAAIA,CAAC,CAACE,IAAnB,CADN;AAEA,MAAA,SAAS,EAAGC,SAFZ;AAGA,MAAA,SAAS,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,aAAD;AACA,MAAA,IAAI,EAAEf,IADN;AAEA,MAAA,SAAS,EAAEM,SAFX;AAGA,MAAA,SAAS,EAAES;AAHX;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzCQhB,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React, { useState , useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nconst API = \"http://localhost:8002/bots\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch(API)\n    .then(res => res.json())\n    // .then(json => console.log(json))\n    .then(setBots)\n  },[])\n\n  function enlistBot(bot){\n    console.log(bot);\n    setBots(bots.map(b => b.id === bot.id ? {...b, army:true} : b));\n  }\n\n  function removeBot(bot){\n    console.log(bot);\n    setBots(bots.map(b => b.id === bot.id ? {...b, army:false} : b));\n  }\n\n  function deleteBot(bot){\n    // console.log(\"You're fired.\")\n    setBots(bots.filter(b => b.id !== bot.id))\n  }\n  return (\n    <div>\n      <YourBotArmy\n      bots={bots.filter(b => b.army)}\n      removeBot ={removeBot}\n      deleteBot={deleteBot}\n      />\n\n      <BotCollection\n      bots={bots}\n      enlistBot={enlistBot}\n      deleteBot={deleteBot}\n      />\n    </div>\n  )\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}